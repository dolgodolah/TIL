# 첫번째 시도 (시간초과) : 백트래킹으로 모든 경우를 탐색했다.
# 두번째 시도 (160ms) : 완탐은 dp로 풀 수 있다.

# n=25이고 i가 24일 때만 예를 들어보자.
# dp[24]=24 최대값으로 초기화한다.  1^2+1^2+1^2+...1^2이기 때문이다.(넷 혹은 그 이하의 제곱수의 합으로 표현할 수 있다고 증명하였기 때문에 어차피 바뀐다.)
# j는 24**0.5, 즉 4까지 탐색한다.
# min(dp[23]+1,dp[24]), min(dp[20]+1,dp[24]), min(dp[15]+1,dp[24]), min(dp[8]+1,dp[24]) 가 된다.

n=int(input())

dp=[0]*(n+1)
for i in range(1,n+1):
    dp[i]=i
    for j in range(1,int(i**0.5)+1):
        # print(dp[i-j*j]+dp[j*j],dp[i])
        dp[i]=min(dp[i-j*j]+1,dp[i])

print(dp[n])

