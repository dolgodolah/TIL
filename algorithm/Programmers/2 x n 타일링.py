# 점화식을 이용한 동적프로그래밍이다.
# A(n-2)*2 + A(n-1) + A(n-2)
# 마지막 (n-2)는 중복 제거이다.
# 최종 점화식은 A(n-2) + A(n-1)의 형태이다.
# 근데도 효율성테스트를 통과하지 못했다.
# 처음에 return dp[n]%1000000007을 했는데 이러면 dp[i]들을 구하는 과정이 너무 큰수들의 연산이라서
# 시간초과가 발생한다.
# 큰수들의 연산을 방지하기 위해 dp[i]를 구할때마다 %1000000007을 해준다.
def solution(n):
    dp = [0]*(n+1)
    dp[1]=1
    dp[2]=2
    for i in range(3,n+1):
        dp[i]=(dp[i-2]+dp[i-1])%1000000007
    return dp[n]

print(solution(3))