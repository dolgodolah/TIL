# 수학문제에 약하다는 걸 느꼈다. 
# 문제에서 말하는 최고의 집합은 원소들이 골고루 커야한다는 기본 아이디어에서 시작된다. 
# [4,2,2]보다 [3,3,2]가 원소들끼리의 곱이 더 크므로 최고의 집합니다
# s의 합이 최대 100,000,000이고 n은 최대 10,000이다.
# [1,...]부터 탐색하기에는 시간초과가 뻔하다. 최고의 집합 근사값을 찾아야되는데
# 근사값은 s를 n으로 나눈 몫이 된다.

# 예를들어 s=11, n=3이라면 [3]*n 즉, [3,3,3]이 근사값이 된다는 것이다.
# 나머지 11%3=2를 골고루 더해주면 된다. 나머지는 근사값 리스트의 길이보다 작을수 밖에 없으므로
# 인덱스를 하나씩 증가시키면서 더해주면 된다.

def solution(n, s):

    # '만약 최고의 집합이 존재하지 않는 경우에 크기가 1인 1차원 배열(list, vector) 에 -1 을 채워서 return 해주세요.'
    # 에 대한 예외처리
    if n>s:
        return [-1]

    answer = []    
    a=s//n #몫
    b=s%n #나머지
    answer = [a]*n
    for i in range(b):
        answer[i]+=1
    answer.sort()
    return answer


print(solution(2,9))